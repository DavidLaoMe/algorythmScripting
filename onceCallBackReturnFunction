/*
Write a function once that accepts a callback as input and returns a function. 
When the returned function is called the first time, it should call the callback 
and return that output. If it is called any additional times, instead of calling 
the callback again it will simply return the output value from the first time it 
was called.
*/


function once(func) {
  var counter = 0;
  var firstval;

  function closure(num) { // func is addByTwo
    if (!firstval) {
      console.log(func);
      console.log(firstval);
      firstval = func(num); // causes firstval to change to function
      console.log(firstval); 
      return firstval;
    } else return firstval;
  }
  return closure;
}

function addByX(x){
  console.log('hi');
  return function(y){
    console.log('world');
    return x+y;
  }
}

var addByTwo = addByX(2)

var onceFunc = once(addByTwo); // shoots out closure which is a function

// UNCOMMENT THESE TO TEST YOUR WORK!
console.log(onceFunc(4)); //should log 6
console.log(onceFunc(10)); //should log 6
console.log(onceFunc(9001)); //should log 6
